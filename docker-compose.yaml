services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - "POSTGRES_DB=gestion_orquestas"
      - "POSTGRES_USER=david"
      - "POSTGRES_PASSWORD=123456"
    networks:
      - gestorg

  backend:
    build: backend/.
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - "SPRING_DB_HOST=postgres"
      - "SPRING_DB_PORT=5432"
      - "SPRING_DB_NAME=gestion_orquestas"
      - "SPRING_DB_USER=david"
      - "SPRING_DB_PASSWORD=123456"
    depends_on:
      - postgres
    networks:
      - gestorg

  frontend:
    build: frontend/.
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - gestorg
    environment:
      - "BACKEND_URL=http://backend:8080"
    # command: /bin/sh -c "envsubst '${BACKEND_URL}' < /etc/nginx/conf.d/prueba > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'" 

networks:
  gestorg: